<Window x:Class="AWSServerSelector.SettingsDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Binding SettingsTitle}" 
        Width="500" 
        Height="750"
        WindowStartupLocation="CenterOwner"
        ResizeMode="NoResize"
        Background="#0A0A0A"
        FontFamily="Segoe UI Variable"
        Icon="../Resources/icon.ico"
        Style="{StaticResource CustomWindowStyle}"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Aliased"
        RenderOptions.BitmapScalingMode="NearestNeighbor"
        RenderOptions.EdgeMode="Aliased"
        SnapsToDevicePixels="True"
        UseLayoutRounding="True">
    
    <Window.Resources>
        <!-- Modern Card Style -->
        <Style x:Key="ModernCard" TargetType="Border">
            <Setter Property="Background" Value="#1A1A1A"/>
            <Setter Property="BorderBrush" Value="#404040"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" 
                                    Direction="270" 
                                    ShadowDepth="2" 
                                    Opacity="0.3"/>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern ComboBox Style -->
        <Style x:Key="ModernComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="#FF2A2A2A"/>
            <Setter Property="BorderBrush" Value="#FF404040"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Margin" Value="0,4"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                         Grid.Column="2"
                                         Focusable="false"
                                         IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         ClickMode="Press"
                                         Background="{TemplateBinding Background}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         BorderThickness="{TemplateBinding BorderThickness}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="4">
                                            <Grid>
                                                <Path x:Name="Arrow"
                                                      Fill="White"
                                                      HorizontalAlignment="Right"
                                                      VerticalAlignment="Center"
                                                      Margin="0,0,8,0"
                                                      Data="M 0 0 L 4 4 L 8 0 Z"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="#FF3A3A3A"/>
                                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF505050"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="#FF3A3A3A"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite"
                                            IsHitTestVisible="False"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            Margin="8,4,25,4"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"/>
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                           Background="#FF2A2A2A"
                                           BorderThickness="1"
                                           BorderBrush="#FF404040"
                                           CornerRadius="4">
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#808080"/>
                                <Setter TargetName="ToggleButton" Property="Background" Value="#FF1A1A1A"/>
                                <Setter TargetName="ToggleButton" Property="BorderBrush" Value="#FF303030"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern ComboBoxItem Style -->
        <Style x:Key="ModernComboBoxItem" TargetType="ComboBoxItem">
            <Setter Property="Background" Value="#FF2A2A2A"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Margin" Value="0,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Border"
                               Background="{TemplateBinding Background}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FF3A3A3A"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FF404040"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="#FF4A4A4A"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern RadioButton Style -->
        <Style x:Key="ModernRadioButton" TargetType="RadioButton">
            <Setter Property="Background" Value="#2A2A2A"/>
            <Setter Property="BorderBrush" Value="#404040"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Margin" Value="0,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" 
                                    Grid.Column="0"
                                    Background="#2A2A2A"
                                    BorderBrush="#DC143C"
                                    BorderThickness="2"
                                    CornerRadius="10"
                                    Width="18" Height="18"
                                    Margin="0,0,8,0"/>
                            <Ellipse x:Name="CheckMark"
                                     Grid.Column="0"
                                     Fill="#DC143C"
                                     Width="8" Height="8"
                                     Visibility="Collapsed"
                                     Margin="0,0,8,0"/>
                            <ContentPresenter Grid.Column="1"
                                            Content="{TemplateBinding Content}"
                                            VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Border" Property="Background" Value="#DC143C"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#ed365b"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern CheckBox Style -->
        <Style x:Key="ModernCheckBox" TargetType="CheckBox">
            <Setter Property="Background" Value="#2A2A2A"/>
            <Setter Property="BorderBrush" Value="#404040"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Margin" Value="0,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" 
                                    Grid.Column="0"
                                    Background="#2A2A2A"
                                    BorderBrush="#DC143C"
                                    BorderThickness="2"
                                    CornerRadius="4"
                                    Width="18" Height="18"
                                    Margin="0,0,8,0"/>
                            <Path x:Name="CheckMark"
                                  Grid.Column="0"
                                  Data="M 2,6 L 6,10 L 14,2"
                                  Stroke="#DC143C"
                                  StrokeThickness="2"
                                  Visibility="Collapsed"
                                  Margin="0,0,8,0"/>
                            <ContentPresenter Grid.Column="1"
                                            Content="{TemplateBinding Content}"
                                            VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Border" Property="Background" Value="#DC143C"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#ed365b"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern Button Style -->
         <Style x:Key="ModernButton" TargetType="Button">
             <Setter Property="Background" Value="#FFDC143C"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="20,12"/>
            <Setter Property="Margin" Value="8,0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="8"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                        </Border>
                         <ControlTemplate.Triggers>
                             <Trigger Property="IsMouseOver" Value="True">
                                 <Setter Property="Background" Value="#FFed365b"/>
                             </Trigger>
                             <Trigger Property="IsPressed" Value="True">
                                 <Setter Property="Background" Value="#FFDC143C"/>
                             </Trigger>
                         </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Secondary Button Style -->
        <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="#2A2A2A"/>
            <Setter Property="BorderBrush" Value="#404040"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#404040"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Global TextBlock Style for All TextBlocks -->
        <Style TargetType="TextBlock">
            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>
            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
            <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
        </Style>
        
        <!-- Custom Thin ScrollBar Style -->
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Style.Triggers>
                <!-- Vertical ScrollBar -->
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="8"/>
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid Background="Transparent">
                                    <Track x:Name="PART_Track" IsDirectionReversed="True">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageUpCommand" 
                                                         Opacity="0" 
                                                         Focusable="False"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb>
                                                <Thumb.Template>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border x:Name="ThumbBorder" 
                                                               Background="#404040" 
                                                               CornerRadius="4"
                                                               Margin="2,0"/>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="ThumbBorder" 
                                                                       Property="Background" 
                                                                       Value="#606060"/>
                                                            </Trigger>
                                                            <Trigger Property="IsDragging" Value="True">
                                                                <Setter TargetName="ThumbBorder" 
                                                                       Property="Background" 
                                                                       Value="#707070"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Thumb.Template>
                                            </Thumb>
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageDownCommand" 
                                                         Opacity="0" 
                                                         Focusable="False"/>
                                        </Track.IncreaseRepeatButton>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <!-- Horizontal ScrollBar -->
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="8"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid Background="Transparent">
                                    <Track x:Name="PART_Track" IsDirectionReversed="False">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageLeftCommand" 
                                                         Opacity="0" 
                                                         Focusable="False"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb>
                                                <Thumb.Template>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border x:Name="ThumbBorder" 
                                                               Background="#404040" 
                                                               CornerRadius="4"
                                                               Margin="0,2"/>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="ThumbBorder" 
                                                                       Property="Background" 
                                                                       Value="#606060"/>
                                                            </Trigger>
                                                            <Trigger Property="IsDragging" Value="True">
                                                                <Setter TargetName="ThumbBorder" 
                                                                       Property="Background" 
                                                                       Value="#707070"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Thumb.Template>
                                            </Thumb>
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageRightCommand" 
                                                         Opacity="0" 
                                                         Focusable="False"/>
                                        </Track.IncreaseRepeatButton>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Scrollable Content -->
        <ScrollViewer Grid.Row="0" 
                       VerticalScrollBarVisibility="Auto"
                       HorizontalScrollBarVisibility="Disabled"
                       Padding="25">
            <StackPanel>
                <!-- Header -->
                <StackPanel Orientation="Horizontal" Margin="0,0,0,20">
                    <TextBlock Text="{Binding SettingsTitle}" 
                              FontSize="24" 
                              FontWeight="Bold" 
                              Foreground="White" 
                              VerticalAlignment="Center"/>
                </StackPanel>
                
                <!-- Language Selection -->
                <Border Style="{StaticResource ModernCard}" Margin="0,0,0,20">
                    <StackPanel>
                        <Border Background="#2A2A2A" 
                               CornerRadius="12,12,0,0" 
                               Padding="20,15">
                            <TextBlock Text="{Binding LanguageText}" 
                                      FontSize="16" 
                                      FontWeight="SemiBold" 
                                      Foreground="White"/>
                        </Border>
                        <Border Padding="20,15" CornerRadius="0,0,12,12">
                            <ComboBox x:Name="LanguageComboBox"
                                     Style="{StaticResource ModernComboBox}"
                                     ItemsSource="{Binding Languages}"
                                     DisplayMemberPath="Name"
                                     SelectedValuePath="Code"
                                     SelectedValue="{Binding SelectedLanguage}"
                                     ItemContainerStyle="{StaticResource ModernComboBoxItem}"/>
                        </Border>
                    </StackPanel>
                </Border>
                
                <!-- Mode Selection -->
                <Border Style="{StaticResource ModernCard}" Margin="0,0,0,20">
                    <StackPanel>
                        <Border Background="#2A2A2A" 
                               CornerRadius="12,12,0,0" 
                               Padding="20,15">
                            <TextBlock Text="{Binding MethodText}" 
                                      FontSize="16" 
                                      FontWeight="SemiBold" 
                                      Foreground="White"/>
                        </Border>
                        <Border Padding="20,15" CornerRadius="0,0,12,12">
                            <ComboBox x:Name="ModeComboBox"
                                     Style="{StaticResource ModernComboBox}"
                                     ItemsSource="{Binding Modes}"
                                     DisplayMemberPath="Name"
                                     SelectedValuePath="Code"
                                     SelectedValue="{Binding SelectedMode}"
                                     ItemContainerStyle="{StaticResource ModernComboBoxItem}"/>
                        </Border>
                    </StackPanel>
                </Border>
                
                <!-- Block Options -->
                <Border Style="{StaticResource ModernCard}" Margin="0,0,0,20">
                    <StackPanel>
                        <Border Background="#2A2A2A" 
                               CornerRadius="12,12,0,0" 
                               Padding="20,15">
                            <TextBlock Text="{Binding GatekeepOptionsText}" 
                                      FontSize="16" 
                                      FontWeight="SemiBold" 
                                      Foreground="White"/>
                        </Border>
                        <Border Padding="20,15" CornerRadius="0,0,12,12">
                            <StackPanel>
                                <RadioButton x:Name="BlockBothRadio" 
                                           Style="{StaticResource ModernRadioButton}"
                                           Content="{Binding BlockBothText}"
                                           IsChecked="{Binding IsBlockBoth}"/>
                                <RadioButton x:Name="BlockPingRadio" 
                                           Style="{StaticResource ModernRadioButton}"
                                           Content="{Binding BlockPingText}"
                                           IsChecked="{Binding IsBlockPing}"/>
                                <RadioButton x:Name="BlockServiceRadio" 
                                           Style="{StaticResource ModernRadioButton}"
                                           Content="{Binding BlockServiceText}"
                                           IsChecked="{Binding IsBlockService}"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>
                
                <!-- Advanced Options -->
                <Border Style="{StaticResource ModernCard}" Margin="0,0,0,20">
                    <StackPanel>
                        <Border Background="#2A2A2A" 
                               CornerRadius="12,12,0,0" 
                               Padding="20,15">
                            <TextBlock Text="⚡ Advanced Options" 
                                      FontSize="16" 
                                      FontWeight="SemiBold" 
                                      Foreground="White"/>
                        </Border>
                        <Border Padding="20,15" CornerRadius="0,0,12,12">
                            <CheckBox x:Name="MergeUnstableCheck" 
                                     Style="{StaticResource ModernCheckBox}"
                                     Content="{Binding MergeUnstableText}"
                                     IsChecked="{Binding IsMergeUnstable}"/>
                        </Border>
                    </StackPanel>
                </Border>
            </StackPanel>
        </ScrollViewer>
        
        <!-- Button Panel -->
        <Border Grid.Row="1" 
               Background="#1A1A1A" 
               BorderBrush="#404040" 
               BorderThickness="0,1,0,0" 
               Padding="25,20">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button x:Name="DefaultButton" 
                       Style="{StaticResource SecondaryButton}"
                       Content="{Binding DefaultOptionsText}"
                       Click="DefaultButton_Click"/>
                <Button x:Name="ApplyButton" 
                       Style="{StaticResource ModernButton}"
                       Content="{Binding ApplyChangesText}"
                       Click="ApplyButton_Click"/>
            </StackPanel>
        </Border>
    </Grid>
</Window>
